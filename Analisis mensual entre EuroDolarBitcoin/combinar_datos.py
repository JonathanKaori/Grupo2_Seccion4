# -*- coding: utf-8 -*-
"""combinar_datos

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VvY7CDsCdJX32P20Ou5DTiqt-hcA5XFB
"""

import pandas as pd

# Cargar los archivos
usd_eur_data = pd.read_csv('USD-EUR-2015-2024.csv')
bitcoin_data = pd.read_csv('bitcoin.csv')

# Convertir las fechas en formatos compatibles
usd_eur_data['Month_Year'] = pd.to_datetime(usd_eur_data['Month_Year'], format='%m-%Y')
bitcoin_data['date'] = pd.to_datetime(bitcoin_data['date'])

# Crear un DataFrame para USD/EUR con fechas diarias
expanded_usd_eur = pd.DataFrame()

for index, row in usd_eur_data.iterrows():
    # Generar rango de fechas para cada mes
    start_date = row['Month_Year']
    end_date = start_date + pd.offsets.MonthEnd(1)
    dates = pd.date_range(start=start_date, end=end_date, freq='D')

    # Repetir tasa de cambio para cada d√≠a
    month_data = pd.DataFrame({
        'date': dates,
        'USD/EUR Exchange Rate': row['USD_EUR_Exchange_Rate']
    })
    expanded_usd_eur = pd.concat([expanded_usd_eur, month_data], ignore_index=True)

# Unir las tasas diarias con los precios de Bitcoin
daily_comparison = pd.merge(bitcoin_data, expanded_usd_eur, on='date', how='inner')

# Seleccionar y ordenar las columnas
daily_comparison = daily_comparison[['date', 'USD/EUR Exchange Rate', 'price']]
daily_comparison.rename(columns={'price': 'Bitcoin Price (USD)'}, inplace=True)

# Guardar los datos combinados en un archivo CSV
daily_comparison.to_csv('USD_EUR_Bitcoin_Daily_Comparison.csv', index=False)

print("El archivo combinado ha sido guardado como 'USD_EUR_Bitcoin_Daily_Comparison.csv'")